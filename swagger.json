{
  "openapi": "3.0.2",
  "info": {
    "title": "Booking System API",
    "version": "1.0.0",
    "description": "Booking System API docs"
  },
  "tags": [
    {
      "name": "Times",
      "description": "Handling booking times"
    },
    {
      "name": "Users",
      "description": "Operations about user"
    },
    {
      "name": "Sessions",
      "description": "Logging in users"
    }
  ],
  "paths": {
    "/times": {
      "get": {
        "tags": ["Times"],
        "description": "Get a list of all times",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/timesResponse"
                },
                "examples": {
                  "time": {
                    "value": [
                      {
                        "id": 3,
                        "day": "2022-02-16",
                        "start": "8:30",
                        "end": "9:00",
                        "bookedBy": ""
                      },
                      {
                        "id": 5,
                        "day": "2022-11-14",
                        "start": "2:00",
                        "end": "3:30",
                        "bookedBy": ""
                      }
                    ]
                  }
                }
              }
            },
            "description": "Returns list of times"
          }
        }
      },
      "post": {
        "tags": ["Times"],
        "description": "Create a new time",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/timesRequest"
              },
              "examples": {
                "request body": {
                  "$ref": "#/components/schemas/timesRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response when logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/timesResponse"
                },
                "examples": {
                  "Edit response when logged in": {
                    "request body": {
                      "$ref": "#/components/schemas/timesResponse"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Response without being logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "You have to login"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/times/edit/{id}": {
      "patch": {
        "tags": ["Times"],
        "description": "Edit time by id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/timesRequest"
              },
              "examples": {
                "request body": {
                  "$ref": "#/components/schemas/timesRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response when logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/timesResponse"
                },
                "examples": {
                  "request body": {
                    "$ref": "#/components/schemas/timesResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Response when request body is missing information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Response when not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "You have to login"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "examples": {
            "time id example": {
              "value": "1"
            }
          },
          "name": "id",
          "description": "time id",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/times/{id}": {
      "get": {
        "tags": ["Times"],
        "description": "Get time by id",
        "responses": {
          "200": {
            "description": "Response when logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/timesResponse"
                },
                "examples": {
                  "request body": {
                    "$ref": "#/components/schemas/timesResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Response when id does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "Time not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Times"],
        "description": "Delete time by id",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "You have to login"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "Time not found"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sessionId": {
                    "example": "1"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Times"],
        "description": "Edit time by id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/timesRequest"
              },
              "examples": {
                "request body": {
                  "$ref": "#/components/schemas/timesRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response when logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/timesResponse"
                },
                "examples": {
                  "request body": {
                    "$ref": "#/components/schemas/timesResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Response when request body is missing information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No record with given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "Not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "examples": {
            "time id example": {
              "value": "1"
            }
          },
          "name": "id",
          "description": "time id",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/times/available": {
      "get": {
        "tags": ["Times"],
        "description": "Get available times",
        "responses": {
          "200": {
            "description": "Returns a list of available times",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/timesResponse"
                },
                "examples": {
                  "time": {
                    "value": [
                      {
                        "id": 3,
                        "day": "2022-02-16",
                        "start": "8:30",
                        "end": "9:00",
                        "bookedBy": ""
                      },
                      {
                        "id": 5,
                        "day": "2022-11-14",
                        "start": "2:00",
                        "end": "3:30",
                        "bookedBy": ""
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["Users"],
        "description": "Create user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "example": "Admin"
                  },
                  "password": {
                    "example": "Password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Upon user creation returns session id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sessionsResponse"
                },
                "examples": {
                  "request body": {
                    "$ref": "#/components/schemas/sessionsResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Response when request body is missing information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "Error message"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Response when user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "Conflict: The user already exists."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": ["Sessions"],
        "description": "Log in the user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sessionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sessionsResponse"
                },
                "examples": {
                  "postSessions": {
                    "value": {
                      "sessionId": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Response when request body is missing information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: username or password is incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "Unauthorized: username or password is incorrect": {
                    "value": {
                      "error": "Unauthorized: username or password is incorrect"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Sessions"],
        "description": "Delete user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sessionId": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "error": {
        "title": "Root Type for error",
        "description": "error",
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        },
        "example": {
          "error": "Error description"
        }
      },
      "sessionsResponse": {
        "title": "Root Type for sessionsResponse",
        "description": "",
        "type": "object",
        "properties": {
          "sessionId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "example": {
          "sessionId": 2
        }
      },
      "sessionsRequest": {
        "title": "Root Type for sessionsRequest",
        "description": "",
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "example": {
          "password": "Password",
          "username": "Admin"
        }
      },
      "timesResponse": {
        "title": "Root Type for timesResponse",
        "description": "",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "day": { "type": "string" },
          "start": { "type": "string" },
          "end": { "type": "string" },
          "bookedBy": { "type": "string" },
          "phone": { "type": "string" }
        },
        "example": {
          "id": 3,
          "day": "2022-02-16",
          "start": "8:30",
          "end": "9:00",
          "bookedBy": "Admin",
          "phone": "56456456"
        }
      },
      "timesRequest": {
        "title": "Root Type for timesRequest",
        "description": "",
        "type": "object",
        "properties": {
          "sessionId": { "type": "integer" },
          "id": { "type": "integer" },
          "day": { "type": "string" },
          "start": { "type": "string" },
          "end": { "type": "string" },
          "name": { "type": "string" },
          "phone": { "type": "string" }
        },
        "example": {
          "sessionId": "1",
          "id": 1,
          "day": "2025-02-16",
          "start": "8:30",
          "end": "9:00",
          "name": "SomeBody",
          "phone": "56456456"
        }
      }
    }
  }
}
